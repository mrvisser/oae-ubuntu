MathJax.Extension["TeX/extpfeil"]={version:"2.0"},MathJax.Hub.Register.StartupHook("TeX Jax Ready",function(){var e=MathJax.InputJax.TeX,t=e.Definitions;MathJax.Hub.Insert(t,{macros:{xtwoheadrightarrow:["Extension","AMSmath"],xtwoheadleftarrow:["Extension","AMSmath"],xmapsto:["Extension","AMSmath"],xlongequal:["Extension","AMSmath"],xtofrom:["Extension","AMSmath"],Newextarrow:["Extension","AMSmath"]}}),MathJax.Hub.Register.StartupHook("TeX AMSmath Ready",function(){MathJax.Hub.Insert(t,{macros:{xtwoheadrightarrow:["xArrow",8608,12,16],xtwoheadleftarrow:["xArrow",8606,17,13],xmapsto:["xArrow",8614,6,7],xlongequal:["xArrow",61,7,7],xtofrom:["xArrow",8644,12,12],Newextarrow:"NewExtArrow"}})}),e.Parse.Augment({NewExtArrow:function(n){var r=this.GetArgument(n),i=this.GetArgument(n),s=this.GetArgument(n);r.match(/^\\([a-z]+|.)$/i)||e.Error("First argument to "+n+" must be a control sequence name"),i.match(/^(\d+),(\d+)$/)||e.Error("Second argument to "+n+" must be two integers separated by a comma"),s.match(/^(\d+|0x[0-9A-F]+)$/i)||e.Error("Third argument to "+n+" must be a unicode character number"),r=r.substr(1),i=i.split(","),s=parseInt(s),t.macros[r]=["xArrow",s,parseInt(i[0]),parseInt(i[1])]}}),MathJax.Hub.Startup.signal.Post("TeX extpfeil Ready")}),MathJax.Ajax.loadComplete("[MathJax]/extensions/TeX/extpfeil.js");